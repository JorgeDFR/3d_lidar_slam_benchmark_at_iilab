# Start from Ubuntu 20.04 (Focal) base image
FROM ubuntu:20.04

# Generic
# --------------------------------------------- #
ENV DEBIAN_FRONTEND=noninteractive

RUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    wget \
    curl \
    gnupg2 \
    lsb-release \
    build-essential \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*
# --------------------------------------------- #

# Install external libraries
# --------------------------------------------- #

# Install necessary tools and dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    cmake \
    libboost-all-dev \
    libeigen3-dev \
    libpcl-dev \
    libgoogle-glog-dev \
    libgflags-dev \
    libatlas-base-dev \
    libsuitesparse-dev \
    libtbb-dev \
    libopencv-dev \
    libgeographic-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Ceres Solver 2.2.0
RUN cd /tmp && \
    wget http://ceres-solver.org/ceres-solver-2.2.0.tar.gz && \
    tar zxf ceres-solver-2.2.0.tar.gz && \
    cd ceres-solver-2.2.0 && \
    mkdir -p build && cd build && \
    cmake .. -DBUILD_TESTING=OFF \
             -DBUILD_EXAMPLES=OFF && \
    make -j4 && \
    make install && \
    rm -rf /tmp/ceres-solver-2.2.0*

# Install GTSAM 4.0.3
RUN add-apt-repository ppa:borglab/gtsam-release-4.0 && \
    apt-get install -y --no-install-recommends libgtsam-dev libgtsam-unstable-dev && \
    rm -rf /var/lib/apt/lists/*

# Install Livox SDK
RUN cd /tmp && \
    git clone https://github.com/Livox-SDK/Livox-SDK.git && \
    cd Livox-SDK && \
    mkdir -p build && cd build && \
    cmake .. && \
    make -j4 && \
    make install && \
    rm -rf /tmp/Livox-SDK
# --------------------------------------------- #

# ROS installation
# --------------------------------------------- #
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV ROS_DISTRO=noetic

# Add ROS 1 apt repository and key
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -
RUN echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" \
    > /etc/apt/sources.list.d/ros-latest.list
RUN wget http://packages.ros.org/ros.key -O - | apt-key add -

# Install ROS 1 and necessary tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-${ROS_DISTRO}-ros-base \
    ros-${ROS_DISTRO}-geometry \
    ros-${ROS_DISTRO}-rviz \
    python3-catkin-tools \
    python3-rosdep \
    python3-rosinstall \
    python3-vcstools \
    && rm -rf /var/lib/apt/lists/*

# Initialize rosdep and update for ROS 1
RUN rosdep init && rosdep update --rosdistro ${ROS_DISTRO}
# --------------------------------------------- #

# SLAM algorithms workspace preparation
# --------------------------------------------- #
ARG ROS1_WS=/root/ros1_ws

# Create workspace directory and clone SLAM repositories
RUN mkdir -p ${ROS1_WS}/src && \
    cd ${ROS1_WS}/src && \
    git clone https://github.com/Thorfr123/A-LOAM.git && \
    git clone https://github.com/Thorfr123/LeGO-LOAM-BOR.git && \
    git clone https://github.com/Livox-SDK/livox_ros_driver.git && \
    git clone https://github.com/Thorfr123/liorf.git && \
    git clone https://github.com/vectr-ucla/direct_lidar_inertial_odometry.git
    
# Copy local configuration files
COPY ./slam_benchmark_ros1_conf ${ROS1_WS}/src/slam_benchmark_ros1_conf/

# Install workspace dependencies and build
WORKDIR ${ROS1_WS}
RUN bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && \
             apt-get update && \
             rosdep install --from-paths src --ignore-src --skip-keys='gtsam' -r -y && \
             catkin build aloam_velodyne && \
             catkin build lego_loam_bor cloud_msgs && \
             catkin build livox_ros_driver && \
             catkin build liorf && \
             catkin build direct_lidar_inertial_odometry && \
             catkin build slam_benchmark_ros1_conf && \
             rm -rf /var/lib/apt/lists/*"

# Set up ROS environment sourcing for new shell sessions
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> ~/.bashrc && \
    echo "source ${ROS1_WS}/devel/setup.bash" >> ~/.bashrc
# --------------------------------------------- #

# ROS environment variables setting
# --------------------------------------------- #
WORKDIR /root
COPY ./docker/ros1_entrypoint.sh /root/
RUN chmod 777 /root/ros1_entrypoint.sh
ENTRYPOINT ["/root/ros1_entrypoint.sh"]
CMD ["bash"]
# --------------------------------------------- #