# Start from Ubuntu 22.04 (Jammy) base image
FROM ubuntu:22.04

# Generic
# --------------------------------------------- #
ENV DEBIAN_FRONTEND=noninteractive

RUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    wget \
    curl \
    gnupg2 \
    lsb-release \
    build-essential \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*
# --------------------------------------------- #

# Install external libraries
# --------------------------------------------- #

# Install necessary tools and dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    cmake \
    libboost-all-dev \
    libeigen3-dev \
    libtbb-dev \
    libopencv-dev \
    libmetis-dev \
    && rm -rf /var/lib/apt/lists/*
# --------------------------------------------- #

# ROS installation
# --------------------------------------------- #
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV ROS_DISTRO=humble

# Add ROS 2 apt repository and key
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \
         -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \
          http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | \
          tee /etc/apt/sources.list.d/ros2.list > /dev/null

# Install ROS 2 necessary tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-${ROS_DISTRO}-ros-base \
    ros-${ROS_DISTRO}-rviz2 \
    python3-colcon-common-extensions \
    python3-colcon-mixin \
    python3-rosdep \
    python3-vcstool \
    && rm -rf /var/lib/apt/lists/*

# Initialize rosdep and update for ROS 2
RUN rosdep init && rosdep update --rosdistro ${ROS_DISTRO}

# Setup colcon mixin and metadata
RUN colcon mixin add default \
      https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml && \
    colcon mixin update && \
    colcon metadata add default \
      https://raw.githubusercontent.com/colcon/colcon-metadata-repository/master/index.yaml && \
    colcon metadata update
# --------------------------------------------- #

# SLAM algorithms workspace preparation
# --------------------------------------------- #
ARG ROS2_WS=/root/ros2_ws

# Install GLIM and necessary tools
RUN curl -s --compressed "https://koide3.github.io/ppa/ubuntu2204/KEY.gpg" \
         | gpg --dearmor \
         | sudo tee /etc/apt/trusted.gpg.d/koide3_ppa.gpg > /dev/null
RUN echo "deb [signed-by=/etc/apt/trusted.gpg.d/koide3_ppa.gpg] \ 
          https://koide3.github.io/ppa/ubuntu2204 ./" \
         | sudo tee /etc/apt/sources.list.d/koide3_ppa.list
RUN apt-get update && apt-get install -y --no-install-recommends \
    libiridescence-dev \
    libgtsam-points-dev \
    ros-${ROS_DISTRO}-glim-ros \
    && rm -rf /var/lib/apt/lists/*

# Install MOLA-LO and necessary tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    ros-${ROS_DISTRO}-mola \
    ros-${ROS_DISTRO}-mola-state-estimation \
    ros-${ROS_DISTRO}-mola-lidar-odometry \
    && rm -rf /var/lib/apt/lists/*

# Create workspace directory and clone SLAM repositories
RUN mkdir -p ${ROS2_WS}/src && \
    cd ${ROS2_WS}/src && \
    git clone https://github.com/PRBonn/kiss-icp.git && \
    git clone https://github.com/JorgeDFR/kinematic-icp.git && \
    git clone https://github.com/JorgeDFR/vineslam-os.git

# Copy local configuration files
COPY ./slam_benchmark_ros2_conf ${ROS2_WS}/src/slam_benchmark_ros2_conf/

# Install workspace dependencies and build
WORKDIR ${ROS2_WS}
RUN bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && \
             apt-get update && \
             rosdep install --from-paths src --ignore-src -r -y && \
             colcon build --packages-select kiss_icp kinematic_icp && \
             colcon build --packages-select vineslam && \
             colcon build --packages-select vineslam_ros --cmake-args -DLIDAR_TYPE=0 && \
             colcon build --packages-select slam_benchmark_ros2_conf && \
             rm -rf /var/lib/apt/lists/*"

# Set up ROS environment sourcing for new shell sessions
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> ~/.bashrc && \
    echo "source ${ROS2_WS}/install/setup.bash" >> ~/.bashrc
# --------------------------------------------- #

# ROS environment variables setting
# --------------------------------------------- #
WORKDIR /root
COPY ./docker/ros2_entrypoint.sh /root/
RUN chmod 777 /root/ros2_entrypoint.sh
ENTRYPOINT ["/root/ros2_entrypoint.sh"]
CMD ["bash"]
# --------------------------------------------- #